from pydantic import BaseModel, Field
from typing import Optional, List, Dict
from datetime import datetime, timedelta
from enum import Enum

class VulnerabilitySeverity(str, Enum):
    CRITICAL = "Critical"
    HIGH = "High"
    MEDIUM = "Medium"
    LOW = "Low"
    INFORMATIONAL = "Informational"

class VulnerabilityStatus(str, Enum):
    OPEN = "open"
    IN_PROGRESS = "in_progress"
    RESOLVED = "resolved"
    FALSE_POSITIVE = "false_positive"
    ACCEPTED_RISK = "accepted_risk"

class ScanType(str, Enum):
    FULL = "full"
    QUICK = "quick"
    TARGETED = "targeted"
    AUTHENTICATED = "authenticated"
    UNAUTHENTICATED = "unauthenticated"

class PatchPriority(str, Enum):
    CRITICAL = "critical"
    HIGH = "high"
    MEDIUM = "medium"
    LOW = "low"
    OPTIONAL = "optional"

class Vulnerability(BaseModel):
    id: str
    cve_id: Optional[str] = None
    title: str
    description: str
    severity: VulnerabilitySeverity
    status: VulnerabilityStatus = VulnerabilityStatus.OPEN
    cvss_score: Optional[float] = None
    cvss_vector: Optional[str] = None
    affected_machines_count: int = 0
    published_date: Optional[datetime] = None
    updated_date: Optional[datetime] = None
    discovered_date: datetime = Field(default_factory=datetime.now)
    patch_available: bool = False
    exploit_available: bool = False
    vendor: Optional[str] = None
    product: Optional[str] = None
    version: Optional[str] = None
    affected_machines: List[str] = Field(default_factory=list)
    remediation_steps: List[str] = Field(default_factory=list)
    references: List[str] = Field(default_factory=list)
    tags: Dict[str, str] = Field(default_factory=dict)

    class Config:
        from_attributes = True

class VulnerabilityAssessment(BaseModel):
    id: str
    machine_id: str
    machine_name: Optional[str] = None
    scan_date: datetime
    scan_type: ScanType
    vulnerabilities_found: int
    critical_count: int = 0
    high_count: int = 0
    medium_count: int = 0
    low_count: int = 0
    informational_count: int = 0
    status: str  # scheduled, running, completed, failed
    scan_duration: Optional[timedelta] = None
    scanner: Optional[str] = None
    scan_profile: Optional[str] = None
    next_scan_date: Optional[datetime] = None
    vulnerabilities: List[Vulnerability] = Field(default_factory=list)

    class Config:
        from_attributes = True

class PatchStatus(BaseModel):
    machine_id: str
    machine_name: str
    os_type: Optional[str] = None
    os_version: Optional[str] = None
    total_patches: int
    installed_patches: int
    pending_patches: int
    failed_patches: int
    last_update: Optional[datetime] = None
    next_update: Optional[datetime] = None
    auto_update_enabled: bool = False
    reboot_required: bool = False
    patch_groups: List[str] = Field(default_factory=list)
    maintenance_window: Optional[str] = None

    class Config:
        from_attributes = True

class Patch(BaseModel):
    id: str
    kb_number: Optional[str] = None  # For Windows patches
    title: str
    description: str
    severity: VulnerabilitySeverity
    priority: PatchPriority
    release_date: datetime
    classification: str  # Security Update, Critical Update, etc.
    affected_products: List[str] = Field(default_factory=list)
    superseded_by: Optional[str] = None
    supersedes: List[str] = Field(default_factory=list)
    requires_reboot: bool = False
    download_size: Optional[int] = None  # in bytes
    installation_time: Optional[int] = None  # in minutes
    cve_ids: List[str] = Field(default_factory=list)

    class Config:
        from_attributes = True

class MachineVulnerabilityStatus(BaseModel):
    machine_id: str
    machine_name: str
    total_vulnerabilities: int
    critical_vulnerabilities: int
    high_vulnerabilities: int
    medium_vulnerabilities: int
    low_vulnerabilities: int
    last_scan_date: Optional[datetime] = None
    risk_score: Optional[float] = None
    patch_compliance: Optional[float] = None  # percentage
    top_vulnerabilities: List[Vulnerability] = Field(default_factory=list)

    class Config:
        from_attributes = True

class VulnerabilityTrend(BaseModel):
    date: datetime
    total_vulnerabilities: int
    critical_vulnerabilities: int
    high_vulnerabilities: int
    medium_vulnerabilities: int
    low_vulnerabilities: int
    resolved_vulnerabilities: int
    new_vulnerabilities: int

class VulnerabilityReport(BaseModel):
    id: str
    report_type: str  # executive, technical, compliance
    generated_date: datetime
    period_start: datetime
    period_end: datetime
    total_vulnerabilities: int
    vulnerability_breakdown: Dict[str, int]  # severity -> count
    top_vulnerabilities: List[Vulnerability]
    remediation_progress: Dict[str, int]  # status -> count
    risk_metrics: Dict[str, float]
    trends: List[VulnerabilityTrend]
    recommendations: List[str]
    machines_assessed: int
    scan_coverage: float  # percentage

    class Config:
        from_attributes = True

class RemediationTask(BaseModel):
    id: str
    vulnerability_id: str
    machine_id: str
    task_type: str  # patch, configuration, manual
    priority: PatchPriority
    assigned_to: Optional[str] = None
    status: str  # pending, in_progress, completed, failed
    created_date: datetime
    due_date: Optional[datetime] = None
    completed_date: Optional[datetime] = None
    instructions: str
    estimated_effort: Optional[int] = None  # in hours
    actual_effort: Optional[int] = None  # in hours
    notes: List[str] = Field(default_factory=list)

    class Config:
        from_attributes = True 